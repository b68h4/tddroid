using System;
using Newtonsoft.Json;

namespace TdLib
{
    /// <summary>
    /// Autogenerated TDLib APIs
    /// </summary>
    public static partial class TdApi
    {
        /// <summary>
        /// Product invoice 
        /// </summary>
        public class Invoice : Object
        {
            /// <summary>
            /// Data type for serialization
            /// </summary>
            [JsonProperty("@type")]
            public override string DataType { get; set; } = "invoice";

            /// <summary>
            /// Extra data attached to the message
            /// </summary>
            [JsonProperty("@extra")]
            public override string Extra { get; set; }

            /// <summary>
            /// ISO 4217 currency code 
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("currency")]
            public string Currency { get; set; }

            /// <summary>
            /// A list of objects used to calculate the total price of the product 
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("price_parts")]
            public LabeledPricePart[] PriceParts { get; set; }

            /// <summary>
            /// True, if the payment is a test payment
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("is_test")]
            public bool IsTest { get; set; }

            /// <summary>
            /// True, if the user's name is needed for payment 
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("need_name")]
            public bool NeedName { get; set; }

            /// <summary>
            /// True, if the user's phone number is needed for payment 
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("need_phone_number")]
            public bool NeedPhoneNumber { get; set; }

            /// <summary>
            /// True, if the user's email address is needed for payment
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("need_email_address")]
            public bool NeedEmailAddress { get; set; }

            /// <summary>
            /// True, if the user's shipping address is needed for payment 
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("need_shipping_address")]
            public bool NeedShippingAddress { get; set; }

            /// <summary>
            /// True, if the user's phone number will be sent to the provider
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("send_phone_number_to_provider")]
            public bool SendPhoneNumberToProvider { get; set; }

            /// <summary>
            /// True, if the user's email address will be sent to the provider 
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("send_email_address_to_provider")]
            public bool SendEmailAddressToProvider { get; set; }

            /// <summary>
            /// True, if the total price depends on the shipping method
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("is_flexible")]
            public bool IsFlexible { get; set; }
        }
    }
}