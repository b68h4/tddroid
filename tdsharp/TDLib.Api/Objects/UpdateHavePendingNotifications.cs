using System;
using Newtonsoft.Json;

namespace TdLib
{
    /// <summary>
    /// Autogenerated TDLib APIs
    /// </summary>
    public static partial class TdApi
    {
        /// <summary>
        /// Describes whether there are some pending notification updates. Can be used to prevent application from killing, while there are some pending notifications
        /// </summary>
        public partial class Update : Object
        {
            /// <summary>
            /// Describes whether there are some pending notification updates. Can be used to prevent application from killing, while there are some pending notifications
            /// </summary>
            public class UpdateHavePendingNotifications : Update
            {
                /// <summary>
                /// Data type for serialization
                /// </summary>
                [JsonProperty("@type")]
                public override string DataType { get; set; } = "updateHavePendingNotifications";

                /// <summary>
                /// Extra data attached to the message
                /// </summary>
                [JsonProperty("@extra")]
                public override string Extra { get; set; }

                /// <summary>
                /// True, if there are some delayed notification updates, which will be sent soon
                /// </summary>
                [JsonConverter(typeof(Converter))]
                [JsonProperty("have_delayed_notifications")]
                public bool HaveDelayedNotifications { get; set; }

                /// <summary>
                /// True, if there can be some yet unreceived notifications, which are being fetched from the server
                /// </summary>
                [JsonConverter(typeof(Converter))]
                [JsonProperty("have_unreceived_notifications")]
                public bool HaveUnreceivedNotifications { get; set; }
            }
        }
    }
}