using System;
using Newtonsoft.Json;

namespace TdLib
{
    /// <summary>
    /// Autogenerated TDLib APIs
    /// </summary>
    public static partial class TdApi
    {
        /// <summary>
        /// The call is pending, waiting to be accepted by a user 
        /// </summary>
        public partial class CallState : Object
        {
            /// <summary>
            /// The call is pending, waiting to be accepted by a user 
            /// </summary>
            public class CallStatePending : CallState
            {
                /// <summary>
                /// Data type for serialization
                /// </summary>
                [JsonProperty("@type")]
                public override string DataType { get; set; } = "callStatePending";

                /// <summary>
                /// Extra data attached to the message
                /// </summary>
                [JsonProperty("@extra")]
                public override string Extra { get; set; }

                /// <summary>
                /// True, if the call has already been created by the server 
                /// </summary>
                [JsonConverter(typeof(Converter))]
                [JsonProperty("is_created")]
                public bool IsCreated { get; set; }

                /// <summary>
                /// True, if the call has already been received by the other party
                /// </summary>
                [JsonConverter(typeof(Converter))]
                [JsonProperty("is_received")]
                public bool IsReceived { get; set; }
            }
        }
    }
}