using System;
using Newtonsoft.Json;

namespace TdLib
{
    /// <summary>
    /// Autogenerated TDLib APIs
    /// </summary>
    public static partial class TdApi
    {
        /// <summary>
        /// An audio message 
        /// </summary>
        public partial class InputMessageContent : Object
        {
            /// <summary>
            /// An audio message 
            /// </summary>
            public class InputMessageAudio : InputMessageContent
            {
                /// <summary>
                /// Data type for serialization
                /// </summary>
                [JsonProperty("@type")]
                public override string DataType { get; set; } = "inputMessageAudio";

                /// <summary>
                /// Extra data attached to the message
                /// </summary>
                [JsonProperty("@extra")]
                public override string Extra { get; set; }

                /// <summary>
                /// Audio file to be sent 
                /// </summary>
                [JsonConverter(typeof(Converter))]
                [JsonProperty("audio")]
                public InputFile Audio { get; set; }

                /// <summary>
                /// Thumbnail of the cover for the album, if available 
                /// </summary>
                [JsonConverter(typeof(Converter))]
                [JsonProperty("album_cover_thumbnail")]
                public InputThumbnail AlbumCoverThumbnail { get; set; }

                /// <summary>
                /// Duration of the audio, in seconds; may be replaced by the server 
                /// </summary>
                [JsonConverter(typeof(Converter))]
                [JsonProperty("duration")]
                public int Duration { get; set; }

                /// <summary>
                /// Title of the audio; 0-64 characters; may be replaced by the server
                /// </summary>
                [JsonConverter(typeof(Converter))]
                [JsonProperty("title")]
                public string Title { get; set; }

                /// <summary>
                /// Performer of the audio; 0-64 characters, may be replaced by the server 
                /// </summary>
                [JsonConverter(typeof(Converter))]
                [JsonProperty("performer")]
                public string Performer { get; set; }

                /// <summary>
                /// Audio caption; 0-GetOption("message_caption_length_max") characters
                /// </summary>
                [JsonConverter(typeof(Converter))]
                [JsonProperty("caption")]
                public FormattedText Caption { get; set; }
            }
        }
    }
}