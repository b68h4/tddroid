using System;
using Newtonsoft.Json;

namespace TdLib
{
    /// <summary>
    /// Autogenerated TDLib APIs
    /// </summary>
    public static partial class TdApi
    {
        /// <summary>
        /// Describes the address of UDP reflectors 
        /// </summary>
        public class CallConnection : Object
        {
            /// <summary>
            /// Data type for serialization
            /// </summary>
            [JsonProperty("@type")]
            public override string DataType { get; set; } = "callConnection";

            /// <summary>
            /// Extra data attached to the message
            /// </summary>
            [JsonProperty("@extra")]
            public override string Extra { get; set; }

            /// <summary>
            /// Reflector identifier 
            /// </summary>
            [JsonConverter(typeof(Converter.Int64))]
            [JsonProperty("id")]
            public Int64 Id { get; set; }

            /// <summary>
            /// IPv4 reflector address 
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("ip")]
            public string Ip { get; set; }

            /// <summary>
            /// 
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("ipv6")]
            public string Ipv6 { get; set; }

            /// <summary>
            /// Reflector port number 
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("port")]
            public int Port { get; set; }

            /// <summary>
            /// Connection peer tag
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("peer_tag")]
            public byte[] PeerTag { get; set; }
        }
    }
}