using System;
using Newtonsoft.Json;

namespace TdLib
{
    /// <summary>
    /// Autogenerated TDLib APIs
    /// </summary>
    public static partial class TdApi
    {
        /// <summary>
        /// Represents a supergroup or channel with zero or more members (subscribers in the case of channels). From the point of view of the system, a channel is a special kind of a supergroup: only administrators can post and see the list of members, and posts from all administrators use the name and photo of the channel instead of individual names and profile photos. Unlike supergroups, channels can have an unlimited number of subscribers
        /// </summary>
        public class Supergroup : Object
        {
            /// <summary>
            /// Data type for serialization
            /// </summary>
            [JsonProperty("@type")]
            public override string DataType { get; set; } = "supergroup";

            /// <summary>
            /// Extra data attached to the message
            /// </summary>
            [JsonProperty("@extra")]
            public override string Extra { get; set; }

            /// <summary>
            /// Supergroup or channel identifier
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("id")]
            public int Id { get; set; }

            /// <summary>
            /// Username of the supergroup or channel; empty for private supergroups or channels
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("username")]
            public string Username { get; set; }

            /// <summary>
            /// Point in time (Unix timestamp) when the current user joined, or the point in time when the supergroup or channel was created, in case the user is not a member
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("date")]
            public int Date { get; set; }

            /// <summary>
            /// Status of the current user in the supergroup or channel; custom title will be always empty
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("status")]
            public ChatMemberStatus Status { get; set; }

            /// <summary>
            /// Member count; 0 if unknown. Currently it is guaranteed to be known only if the supergroup or channel was found through SearchPublicChats
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("member_count")]
            public int MemberCount { get; set; }

            /// <summary>
            /// True, if the channel has a discussion group, or the supergroup is the designated discussion group for a channel
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("has_linked_chat")]
            public bool HasLinkedChat { get; set; }

            /// <summary>
            /// True, if the supergroup is connected to a location, i.e. the supergroup is a location-based supergroup
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("has_location")]
            public bool HasLocation { get; set; }

            /// <summary>
            /// True, if messages sent to the channel should contain information about the sender. This field is only applicable to channels
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("sign_messages")]
            public bool SignMessages { get; set; }

            /// <summary>
            /// True, if the slow mode is enabled in the supergroup
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("is_slow_mode_enabled")]
            public bool IsSlowModeEnabled { get; set; }

            /// <summary>
            /// True, if the supergroup is a channel
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("is_channel")]
            public bool IsChannel { get; set; }

            /// <summary>
            /// True, if the supergroup or channel is verified
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("is_verified")]
            public bool IsVerified { get; set; }

            /// <summary>
            /// If non-empty, contains a human-readable description of the reason why access to this supergroup or channel must be restricted
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("restriction_reason")]
            public string RestrictionReason { get; set; }

            /// <summary>
            /// True, if many users reported this supergroup as a scam
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("is_scam")]
            public bool IsScam { get; set; }
        }
    }
}