using System;
using Newtonsoft.Json;

namespace TdLib
{
    /// <summary>
    /// Autogenerated TDLib APIs
    /// </summary>
    public static partial class TdApi
    {
        /// <summary>
        /// Contains full information about a user (except the full list of profile photos) 
        /// </summary>
        public class UserFullInfo : Object
        {
            /// <summary>
            /// Data type for serialization
            /// </summary>
            [JsonProperty("@type")]
            public override string DataType { get; set; } = "userFullInfo";

            /// <summary>
            /// Extra data attached to the message
            /// </summary>
            [JsonProperty("@extra")]
            public override string Extra { get; set; }

            /// <summary>
            /// True, if the user is blacklisted by the current user
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("is_blocked")]
            public bool IsBlocked { get; set; }

            /// <summary>
            /// True, if the user can be called 
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("can_be_called")]
            public bool CanBeCalled { get; set; }

            /// <summary>
            /// True, if the user can't be called due to their privacy settings
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("has_private_calls")]
            public bool HasPrivateCalls { get; set; }

            /// <summary>
            /// True, if the current user needs to explicitly allow to share their phone number with the user when the method addContact is used
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("need_phone_number_privacy_exception")]
            public bool NeedPhoneNumberPrivacyException { get; set; }

            /// <summary>
            /// A short user bio 
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("bio")]
            public string Bio { get; set; }

            /// <summary>
            /// For bots, the text that is included with the link when users share the bot 
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("share_text")]
            public string ShareText { get; set; }

            /// <summary>
            /// Number of group chats where both the other user and the current user are a member; 0 for the current user 
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("group_in_common_count")]
            public int GroupInCommonCount { get; set; }

            /// <summary>
            /// If the user is a bot, information about the bot; may be null
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("bot_info")]
            public BotInfo BotInfo { get; set; }
        }
    }
}