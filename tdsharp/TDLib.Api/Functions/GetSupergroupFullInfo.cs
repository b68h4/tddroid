using System;
using System.Threading.Tasks;
using Newtonsoft.Json;

namespace TdLib
{
    /// <summary>
    /// Autogenerated TDLib APIs
    /// </summary>
    public static partial class TdApi
    {
        /// <summary>
        /// Returns full information about a supergroup or a channel by its identifier, cached for up to 1 minute 
        /// </summary>
        public class GetSupergroupFullInfo : Function<SupergroupFullInfo>
        {
            /// <summary>
            /// Data type for serialization
            /// </summary>
            [JsonProperty("@type")]
            public override string DataType { get; set; } = "getSupergroupFullInfo";

            /// <summary>
            /// Extra data attached to the message
            /// </summary>
            [JsonProperty("@extra")]
            public override string Extra { get; set; }

            /// <summary>
            /// Supergroup or channel identifier
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("supergroup_id")]
            public int SupergroupId { get; set; }
        }


        /// <summary>
        /// Returns full information about a supergroup or a channel by its identifier, cached for up to 1 minute 
        /// </summary>
        public static Task<SupergroupFullInfo> GetSupergroupFullInfoAsync(this Client client,
            int supergroupId = default(int))
        {
            return client.ExecuteAsync(new GetSupergroupFullInfo
            {
                SupergroupId = supergroupId,
            });
        }
    }
}