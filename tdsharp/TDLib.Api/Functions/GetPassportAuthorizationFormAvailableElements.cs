using System;
using System.Threading.Tasks;
using Newtonsoft.Json;

namespace TdLib
{
    /// <summary>
    /// Autogenerated TDLib APIs
    /// </summary>
    public static partial class TdApi
    {
        /// <summary>
        /// Returns already available Telegram Passport elements suitable for completing a Telegram Passport authorization form. Result can be received only once for each authorization form 
        /// </summary>
        public class GetPassportAuthorizationFormAvailableElements : Function<PassportElementsWithErrors>
        {
            /// <summary>
            /// Data type for serialization
            /// </summary>
            [JsonProperty("@type")]
            public override string DataType { get; set; } = "getPassportAuthorizationFormAvailableElements";

            /// <summary>
            /// Extra data attached to the message
            /// </summary>
            [JsonProperty("@extra")]
            public override string Extra { get; set; }

            /// <summary>
            /// Authorization form identifier 
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("autorization_form_id")]
            public int AutorizationFormId { get; set; }

            /// <summary>
            /// Password of the current user
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("password")]
            public string Password { get; set; }
        }


        /// <summary>
        /// Returns already available Telegram Passport elements suitable for completing a Telegram Passport authorization form. Result can be received only once for each authorization form 
        /// </summary>
        public static Task<PassportElementsWithErrors> GetPassportAuthorizationFormAvailableElementsAsync(
            this Client client,
            int autorizationFormId = default(int),
            string password = default(string))
        {
            return client.ExecuteAsync(new GetPassportAuthorizationFormAvailableElements
            {
                AutorizationFormId = autorizationFormId,
                Password = password,
            });
        }
    }
}