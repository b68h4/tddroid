using System;
using System.Threading.Tasks;
using Newtonsoft.Json;

namespace TdLib
{
    /// <summary>
    /// Autogenerated TDLib APIs
    /// </summary>
    public static partial class TdApi
    {
        /// <summary>
        /// Searches for emojis by keywords. Supported only if the file database is enabled 
        /// </summary>
        public class SearchEmojis : Function<Emojis>
        {
            /// <summary>
            /// Data type for serialization
            /// </summary>
            [JsonProperty("@type")]
            public override string DataType { get; set; } = "searchEmojis";

            /// <summary>
            /// Extra data attached to the message
            /// </summary>
            [JsonProperty("@extra")]
            public override string Extra { get; set; }

            /// <summary>
            /// Text to search for 
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("text")]
            public string Text { get; set; }

            /// <summary>
            /// True, if only emojis, which exactly match text needs to be returned 
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("exact_match")]
            public bool ExactMatch { get; set; }

            /// <summary>
            /// IETF language tag of the user's input language; may be empty if unknown
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("input_language_code")]
            public string InputLanguageCode { get; set; }
        }


        /// <summary>
        /// Searches for emojis by keywords. Supported only if the file database is enabled 
        /// </summary>
        public static Task<Emojis> SearchEmojisAsync(this Client client,
            string text = default(string),
            bool exactMatch = default(bool),
            string inputLanguageCode = default(string))
        {
            return client.ExecuteAsync(new SearchEmojis
            {
                Text = text,
                ExactMatch = exactMatch,
                InputLanguageCode = inputLanguageCode,
            });
        }
    }
}