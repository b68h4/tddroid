using System;
using System.Threading.Tasks;
using Newtonsoft.Json;

namespace TdLib
{
    /// <summary>
    /// Autogenerated TDLib APIs
    /// </summary>
    public static partial class TdApi
    {
        /// <summary>
        /// Changes user privacy settings 
        /// </summary>
        public class SetUserPrivacySettingRules : Function<Ok>
        {
            /// <summary>
            /// Data type for serialization
            /// </summary>
            [JsonProperty("@type")]
            public override string DataType { get; set; } = "setUserPrivacySettingRules";

            /// <summary>
            /// Extra data attached to the message
            /// </summary>
            [JsonProperty("@extra")]
            public override string Extra { get; set; }

            /// <summary>
            /// The privacy setting 
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("setting")]
            public UserPrivacySetting Setting { get; set; }

            /// <summary>
            /// The new privacy rules
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("rules")]
            public UserPrivacySettingRules Rules { get; set; }
        }


        /// <summary>
        /// Changes user privacy settings 
        /// </summary>
        public static Task<Ok> SetUserPrivacySettingRulesAsync(this Client client,
            UserPrivacySetting setting = default(UserPrivacySetting),
            UserPrivacySettingRules rules = default(UserPrivacySettingRules))
        {
            return client.ExecuteAsync(new SetUserPrivacySettingRules
            {
                Setting = setting,
                Rules = rules,
            });
        }
    }
}