using System;
using System.Threading.Tasks;
using Newtonsoft.Json;

namespace TdLib
{
    /// <summary>
    /// Autogenerated TDLib APIs
    /// </summary>
    public static partial class TdApi
    {
        /// <summary>
        /// Changes the user answer to a poll. A poll in quiz mode can be answered only once
        /// </summary>
        public class SetPollAnswer : Function<Ok>
        {
            /// <summary>
            /// Data type for serialization
            /// </summary>
            [JsonProperty("@type")]
            public override string DataType { get; set; } = "setPollAnswer";

            /// <summary>
            /// Extra data attached to the message
            /// </summary>
            [JsonProperty("@extra")]
            public override string Extra { get; set; }

            /// <summary>
            /// Identifier of the chat to which the poll belongs 
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("chat_id")]
            public long ChatId { get; set; }

            /// <summary>
            /// Identifier of the message containing the poll
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("message_id")]
            public long MessageId { get; set; }

            /// <summary>
            /// 0-based identifiers of answer options, chosen by the user. User can choose more than 1 answer option only is the poll allows multiple answers
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("option_ids")]
            public int[] OptionIds { get; set; }
        }


        /// <summary>
        /// Changes the user answer to a poll. A poll in quiz mode can be answered only once
        /// </summary>
        public static Task<Ok> SetPollAnswerAsync(this Client client,
            long chatId = default(long),
            long messageId = default(long),
            int[] optionIds = default(int[]))
        {
            return client.ExecuteAsync(new SetPollAnswer
            {
                ChatId = chatId,
                MessageId = messageId,
                OptionIds = optionIds,
            });
        }
    }
}