using System;
using System.Threading.Tasks;
using Newtonsoft.Json;

namespace TdLib
{
    /// <summary>
    /// Autogenerated TDLib APIs
    /// </summary>
    public static partial class TdApi
    {
        /// <summary>
        /// Edits information about a custom local language pack in the current localization target. Can be called before authorization 
        /// </summary>
        public class EditCustomLanguagePackInfo : Function<Ok>
        {
            /// <summary>
            /// Data type for serialization
            /// </summary>
            [JsonProperty("@type")]
            public override string DataType { get; set; } = "editCustomLanguagePackInfo";

            /// <summary>
            /// Extra data attached to the message
            /// </summary>
            [JsonProperty("@extra")]
            public override string Extra { get; set; }

            /// <summary>
            /// New information about the custom local language pack
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("info")]
            public LanguagePackInfo Info { get; set; }
        }


        /// <summary>
        /// Edits information about a custom local language pack in the current localization target. Can be called before authorization 
        /// </summary>
        public static Task<Ok> EditCustomLanguagePackInfoAsync(this Client client,
            LanguagePackInfo info = default(LanguagePackInfo))
        {
            return client.ExecuteAsync(new EditCustomLanguagePackInfo
            {
                Info = info,
            });
        }
    }
}