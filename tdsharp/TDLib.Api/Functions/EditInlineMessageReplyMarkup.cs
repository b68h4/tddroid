using System;
using System.Threading.Tasks;
using Newtonsoft.Json;

namespace TdLib
{
    /// <summary>
    /// Autogenerated TDLib APIs
    /// </summary>
    public static partial class TdApi
    {
        /// <summary>
        /// Edits the reply markup of an inline message sent via a bot; for bots only 
        /// </summary>
        public class EditInlineMessageReplyMarkup : Function<Ok>
        {
            /// <summary>
            /// Data type for serialization
            /// </summary>
            [JsonProperty("@type")]
            public override string DataType { get; set; } = "editInlineMessageReplyMarkup";

            /// <summary>
            /// Extra data attached to the message
            /// </summary>
            [JsonProperty("@extra")]
            public override string Extra { get; set; }

            /// <summary>
            /// Inline message identifier 
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("inline_message_id")]
            public string InlineMessageId { get; set; }

            /// <summary>
            /// The new message reply markup
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("reply_markup")]
            public ReplyMarkup ReplyMarkup { get; set; }
        }


        /// <summary>
        /// Edits the reply markup of an inline message sent via a bot; for bots only 
        /// </summary>
        public static Task<Ok> EditInlineMessageReplyMarkupAsync(this Client client,
            string inlineMessageId = default(string),
            ReplyMarkup replyMarkup = default(ReplyMarkup))
        {
            return client.ExecuteAsync(new EditInlineMessageReplyMarkup
            {
                InlineMessageId = inlineMessageId,
                ReplyMarkup = replyMarkup,
            });
        }
    }
}