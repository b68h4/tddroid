using System;
using System.Threading.Tasks;
using Newtonsoft.Json;

namespace TdLib
{
    /// <summary>
    /// Autogenerated TDLib APIs
    /// </summary>
    public static partial class TdApi
    {
        /// <summary>
        /// Registers the currently used device for receiving push notifications. Returns a globally unique identifier of the push notification subscription 
        /// </summary>
        public class RegisterDevice : Function<PushReceiverId>
        {
            /// <summary>
            /// Data type for serialization
            /// </summary>
            [JsonProperty("@type")]
            public override string DataType { get; set; } = "registerDevice";

            /// <summary>
            /// Extra data attached to the message
            /// </summary>
            [JsonProperty("@extra")]
            public override string Extra { get; set; }

            /// <summary>
            /// Device token 
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("device_token")]
            public DeviceToken DeviceToken { get; set; }

            /// <summary>
            /// List of user identifiers of other users currently using the client
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("other_user_ids")]
            public int[] OtherUserIds { get; set; }
        }


        /// <summary>
        /// Registers the currently used device for receiving push notifications. Returns a globally unique identifier of the push notification subscription 
        /// </summary>
        public static Task<PushReceiverId> RegisterDeviceAsync(this Client client,
            DeviceToken deviceToken = default(DeviceToken),
            int[] otherUserIds = default(int[]))
        {
            return client.ExecuteAsync(new RegisterDevice
            {
                DeviceToken = deviceToken,
                OtherUserIds = otherUserIds,
            });
        }
    }
}