using System;
using System.Threading.Tasks;
using Newtonsoft.Json;

namespace TdLib
{
    /// <summary>
    /// Autogenerated TDLib APIs
    /// </summary>
    public static partial class TdApi
    {
        /// <summary>
        /// Returns a list of recently used stickers 
        /// </summary>
        public class GetRecentStickers : Function<Stickers>
        {
            /// <summary>
            /// Data type for serialization
            /// </summary>
            [JsonProperty("@type")]
            public override string DataType { get; set; } = "getRecentStickers";

            /// <summary>
            /// Extra data attached to the message
            /// </summary>
            [JsonProperty("@extra")]
            public override string Extra { get; set; }

            /// <summary>
            /// Pass true to return stickers and masks that were recently attached to photos or video files; pass false to return recently sent stickers
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("is_attached")]
            public bool IsAttached { get; set; }
        }


        /// <summary>
        /// Returns a list of recently used stickers 
        /// </summary>
        public static Task<Stickers> GetRecentStickersAsync(this Client client,
            bool isAttached = default(bool))
        {
            return client.ExecuteAsync(new GetRecentStickers
            {
                IsAttached = isAttached,
            });
        }
    }
}