using System;
using System.Threading.Tasks;
using Newtonsoft.Json;

namespace TdLib
{
    /// <summary>
    /// Autogenerated TDLib APIs
    /// </summary>
    public static partial class TdApi
    {
        /// <summary>
        /// Returns information about a public or private message link 
        /// </summary>
        public class GetMessageLinkInfo : Function<MessageLinkInfo>
        {
            /// <summary>
            /// Data type for serialization
            /// </summary>
            [JsonProperty("@type")]
            public override string DataType { get; set; } = "getMessageLinkInfo";

            /// <summary>
            /// Extra data attached to the message
            /// </summary>
            [JsonProperty("@extra")]
            public override string Extra { get; set; }

            /// <summary>
            /// The message link in the format "https://t.me/c/...", or "tg://privatepost?...", or "https://t.me/username/...", or "tg://resolve?..."
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("url")]
            public string Url { get; set; }
        }


        /// <summary>
        /// Returns information about a public or private message link 
        /// </summary>
        public static Task<MessageLinkInfo> GetMessageLinkInfoAsync(this Client client,
            string url = default(string))
        {
            return client.ExecuteAsync(new GetMessageLinkInfo
            {
                Url = url,
            });
        }
    }
}