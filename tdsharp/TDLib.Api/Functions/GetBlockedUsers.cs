using System;
using System.Threading.Tasks;
using Newtonsoft.Json;

namespace TdLib
{
    /// <summary>
    /// Autogenerated TDLib APIs
    /// </summary>
    public static partial class TdApi
    {
        /// <summary>
        /// Returns users that were blocked by the current user 
        /// </summary>
        public class GetBlockedUsers : Function<Users>
        {
            /// <summary>
            /// Data type for serialization
            /// </summary>
            [JsonProperty("@type")]
            public override string DataType { get; set; } = "getBlockedUsers";

            /// <summary>
            /// Extra data attached to the message
            /// </summary>
            [JsonProperty("@extra")]
            public override string Extra { get; set; }

            /// <summary>
            /// Number of users to skip in the result; must be non-negative 
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("offset")]
            public int Offset { get; set; }

            /// <summary>
            /// The maximum number of users to return; up to 100
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("limit")]
            public int Limit { get; set; }
        }


        /// <summary>
        /// Returns users that were blocked by the current user 
        /// </summary>
        public static Task<Users> GetBlockedUsersAsync(this Client client,
            int offset = default(int),
            int limit = default(int))
        {
            return client.ExecuteAsync(new GetBlockedUsers
            {
                Offset = offset,
                Limit = limit,
            });
        }
    }
}