using System;
using System.Threading.Tasks;
using Newtonsoft.Json;

namespace TdLib
{
    /// <summary>
    /// Autogenerated TDLib APIs
    /// </summary>
    public static partial class TdApi
    {
        /// <summary>
        /// Returns a list of users and location-based supergroups nearby. The list of users nearby will be updated for 60 seconds after the request by the updates updateUsersNearby. The request should be sent again every 25 seconds with adjusted location to not miss new chats 
        /// </summary>
        public class SearchChatsNearby : Function<ChatsNearby>
        {
            /// <summary>
            /// Data type for serialization
            /// </summary>
            [JsonProperty("@type")]
            public override string DataType { get; set; } = "searchChatsNearby";

            /// <summary>
            /// Extra data attached to the message
            /// </summary>
            [JsonProperty("@extra")]
            public override string Extra { get; set; }

            /// <summary>
            /// Current user location
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("location")]
            public Location Location { get; set; }
        }


        /// <summary>
        /// Returns a list of users and location-based supergroups nearby. The list of users nearby will be updated for 60 seconds after the request by the updates updateUsersNearby. The request should be sent again every 25 seconds with adjusted location to not miss new chats 
        /// </summary>
        public static Task<ChatsNearby> SearchChatsNearbyAsync(this Client client,
            Location location = default(Location))
        {
            return client.ExecuteAsync(new SearchChatsNearby
            {
                Location = location,
            });
        }
    }
}