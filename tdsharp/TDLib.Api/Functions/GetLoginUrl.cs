using System;
using System.Threading.Tasks;
using Newtonsoft.Json;

namespace TdLib
{
    /// <summary>
    /// Autogenerated TDLib APIs
    /// </summary>
    public static partial class TdApi
    {
        /// <summary>
        /// Returns an HTTP URL which can be used to automatically authorize the user on a website after clicking an inline button of type inlineKeyboardButtonTypeLoginUrl.
        /// </summary>
        public class GetLoginUrl : Function<HttpUrl>
        {
            /// <summary>
            /// Data type for serialization
            /// </summary>
            [JsonProperty("@type")]
            public override string DataType { get; set; } = "getLoginUrl";

            /// <summary>
            /// Extra data attached to the message
            /// </summary>
            [JsonProperty("@extra")]
            public override string Extra { get; set; }

            /// <summary>
            /// Chat identifier of the message with the button 
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("chat_id")]
            public long ChatId { get; set; }

            /// <summary>
            /// Message identifier of the message with the button 
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("message_id")]
            public long MessageId { get; set; }

            /// <summary>
            /// Button identifier
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("button_id")]
            public int ButtonId { get; set; }

            /// <summary>
            /// True, if the user allowed the bot to send them messages
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("allow_write_access")]
            public bool AllowWriteAccess { get; set; }
        }


        /// <summary>
        /// Returns an HTTP URL which can be used to automatically authorize the user on a website after clicking an inline button of type inlineKeyboardButtonTypeLoginUrl.
        /// </summary>
        public static Task<HttpUrl> GetLoginUrlAsync(this Client client,
            long chatId = default(long),
            long messageId = default(long),
            int buttonId = default(int),
            bool allowWriteAccess = default(bool))
        {
            return client.ExecuteAsync(new GetLoginUrl
            {
                ChatId = chatId,
                MessageId = messageId,
                ButtonId = buttonId,
                AllowWriteAccess = allowWriteAccess,
            });
        }
    }
}