using System;
using System.Threading.Tasks;
using Newtonsoft.Json;

namespace TdLib
{
    /// <summary>
    /// Autogenerated TDLib APIs
    /// </summary>
    public static partial class TdApi
    {
        /// <summary>
        /// Adds, edits or deletes a string in a custom local language pack. Can be called before authorization 
        /// </summary>
        public class SetCustomLanguagePackString : Function<Ok>
        {
            /// <summary>
            /// Data type for serialization
            /// </summary>
            [JsonProperty("@type")]
            public override string DataType { get; set; } = "setCustomLanguagePackString";

            /// <summary>
            /// Extra data attached to the message
            /// </summary>
            [JsonProperty("@extra")]
            public override string Extra { get; set; }

            /// <summary>
            /// Identifier of a previously added custom local language pack in the current localization target 
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("language_pack_id")]
            public string LanguagePackId { get; set; }

            /// <summary>
            /// New language pack string
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("new_string")]
            public LanguagePackString NewString { get; set; }
        }


        /// <summary>
        /// Adds, edits or deletes a string in a custom local language pack. Can be called before authorization 
        /// </summary>
        public static Task<Ok> SetCustomLanguagePackStringAsync(this Client client,
            string languagePackId = default(string),
            LanguagePackString newString = default(LanguagePackString))
        {
            return client.ExecuteAsync(new SetCustomLanguagePackString
            {
                LanguagePackId = languagePackId,
                NewString = newString,
            });
        }
    }
}