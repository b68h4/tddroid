using System;
using System.Threading.Tasks;
using Newtonsoft.Json;

namespace TdLib
{
    /// <summary>
    /// Autogenerated TDLib APIs
    /// </summary>
    public static partial class TdApi
    {
        /// <summary>
        /// Disconnects website from the current user's Telegram account 
        /// </summary>
        public class DisconnectWebsite : Function<Ok>
        {
            /// <summary>
            /// Data type for serialization
            /// </summary>
            [JsonProperty("@type")]
            public override string DataType { get; set; } = "disconnectWebsite";

            /// <summary>
            /// Extra data attached to the message
            /// </summary>
            [JsonProperty("@extra")]
            public override string Extra { get; set; }

            /// <summary>
            /// Website identifier
            /// </summary>
            [JsonConverter(typeof(Converter.Int64))]
            [JsonProperty("website_id")]
            public Int64 WebsiteId { get; set; }
        }


        /// <summary>
        /// Disconnects website from the current user's Telegram account 
        /// </summary>
        public static Task<Ok> DisconnectWebsiteAsync(this Client client,
            Int64 websiteId = default(Int64))
        {
            return client.ExecuteAsync(new DisconnectWebsite
            {
                WebsiteId = websiteId,
            });
        }
    }
}